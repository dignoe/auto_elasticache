#!/usr/bin/ruby

require 'fileutils'

ec_config_content = <<-FILE
Resources:
  AppNameEnvironmentElastiCache:
    Type: AWS::ElastiCache::CacheCluster
    Properties:
      CacheNodeType: cache.m1.small
      NumCacheNodes: 1
      Engine : memcached
      CacheSecurityGroupNames:
        - Ref: AppNameEnvironmentCacheSecurityGroup
  AppNameEnvironmentCacheSecurityGroup:
    Type: AWS::ElastiCache::SecurityGroup
    Properties:
      Description: "Lock cache down to webserver access only"
  AppNameEnvironmentCacheSecurityGroupIngress:
    Type: AWS::ElastiCache::SecurityGroupIngress
    Properties:
      CacheSecurityGroupName: 
        Ref: AppNameEnvironmentCacheSecurityGroup
      EC2SecurityGroupName:
        Ref: AWSEBSecurityGroup
FILE

file = '.ebextensions/elasticache.config'
if File.exists?(file)
  warn "`#{file}' already exists, overwriting"
elsif File.exists?(file.downcase)
  warn "[skip] `#{file.downcase}' exists, which could conflict with `#{file}'"
elsif !File.exists?(File.dirname(file))
  warn "[skip] directory `#{File.dirname(file)}' does not exist"
else
  puts "[add] writing `#{file}'"
  File.open(file, "w") { |f| f.write(ec_config_content) }
end


aws_credentials_content = <<-FILE
staging:
  access_key_id: ''
  secret_access_key: ''
production:
  access_key_id: ''
  secret_access_key: ''
FILE

file = 'config/auto_elasticache.yml'
if File.exists?(file)
  warn "[skip] `#{file}' already exists"
elsif File.exists?(file.downcase)
  warn "[skip] `#{file.downcase}' exists, which could conflict with `#{file}'"
elsif !File.exists?(File.dirname(file))
  warn "[skip] directory `#{File.dirname(file)}' does not exist"
else
  puts "[add] writing `#{file}'"
  File.open(file, "w") { |f| f.write(aws_credentials_content) }
end